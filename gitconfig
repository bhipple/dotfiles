[alias]
    ama = am --abort
    br = branch
    bra = branch --all
    ca = commit --amend --no-edit
    ci = commit
    co = checkout
    cob = checkout -b
    cop = "!f() { git fetch ${2:-origin} pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
    df = diff
    dfc = diff --cached
    dfh = diff -- .
    dfs = diff --stat
    dod = diff origin/dev -w
    dom = diff origin/master -w
    dot = diff origin/testing -w
    doms = diff origin/master -w --stat
    dods = diff origin/dev -w --stat
    f = fetch
    fa = fetch --all
    l = log
    lp = log -p --stat
    ld = log --decorate
    lg = log --decorate --oneline --graph --branches --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold blue)(%ar) %C(bold yellow)%d%C(reset) %C(green)%s%C(reset) %C(dim green)- %an%C(reset)'
    ls = log --stat
    logdog = log --decorate --oneline --graph
    p = pull
    pp = "!git pull && git push"
    pr = pull-request
    pr-clean = "!git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"
    pu = push
    rb = rebase
    rba = rebase --abort
    rbc = rebase --continue
    rf = "!echo 'Deleting all local/user fork branches merged into origin/master or origin/dev ...' ; \
       git fetch --all --prune ; \
       for b in master dev; do \
           echo Deleting branches merged into $b; \
           git branch --merged origin/$b | grep -Ev '(master|dev|testing|releases|[*])' | xargs -n 1 git branch -d > /dev/null 2>&1; \
           git branch --merged origin/$b -r | grep -Ev '(master|dev|testing|releases)' \
                | grep $USER | cut -f2- -d'/' | xargs -n 1 git push --delete $USER > /dev/null 2>&1; \
       done; \
       git branch-gc; \
       git branch -f master origin/master; \
       git branch -f dev origin/dev; \
       git pull; \
       echo ""; \
       echo Branches remaining after cleanup:; \
       git branch -a;"
    rmt = remote -v
    rod = rebase origin/dev -i
    rom = rebase origin/master -i
    rot = rebase origin/testing -i
    s = show
    sed = "!git ls-files | xargs sed -i"
    shows = show --stat
    ss = show --stat
    st = status
    ud = branch --set-upstream-to=origin/dev
    um = branch --set-upstream-to=origin/master
    ut = branch --set-upstream-to=origin/testing

    # List aliases
    la = "!git config -l | grep alias | cut -c 7-"
[color]
    ui = true
    status = true
    branch = true
    diff = true
[core]
    pager = less -F -X -R
    preloadindex = true
    excludesfile = ~/.gitignore_global
[diff]
    renameLimit = 2500
[mergetool "fugitive"]
    cmd = vim -f -c \"Gvdiff\" \"$MERGED\"
[mergetool]
    keepBackup = false
[merge]
    tool = fugitive
[push]
    default = simple
[init]
    templatedir = ~/.git_template
[credential]
    helper = cache --timeout=432000
[grep]
    lineNumber = true
[advice]
    detachedHead = false
[url "git://github.com/ghc/packages-"]
    insteadOf = git://github.com/ghc/packages/

# Allow local customizations
[include]
    path = ~/.gitconfig_local
[magit]
  hideCampaign = true
